// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel SolidYellow
#pragma kernel SplitScreen

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
int TexResolution;

//[numthreads(4,4,1)]
//void SolidYellow (uint3 id : SV_DispatchThreadID)
//{
//    // TODO: insert actual code here!

//    Result[id.xy] = float4(1.0, 1.0, 0.0, 1.0);
//}
[numthreads(4,4,1)]
void SolidYellow(
    uint3 groupId : SV_GroupID,
    uint3 groupThreadId : SV_GroupThreadID,
    uint3 dispatchThreadId : SV_DispatchThreadID,
    uint groupIndex : SV_GroupIndex)
{
    //groupIndex = 2;
    //float step = 0.5;
    if (groupIndex == 15)
    {
        Result[dispatchThreadId.xy] = float4(1.0, 1.0, 0.0, 1.0);
    }
    
}

[numthreads(8,8,1)]
void SplitScreen (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    int halfResolution = TexResolution >> 1;
    Result[id.xy] = float4(step(halfResolution, id.x), step(halfResolution, id.y), 0.0, 1.0);
}